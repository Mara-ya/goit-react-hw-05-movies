{"version":3,"file":"static/js/186.6918294b.chunk.js","mappings":"2LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,uJCfa,SAASC,IACpB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAA0BC,GAA1B,iGAEoCC,EAAAA,EAAAA,IAAaD,GAFjD,OAEcE,EAFd,OAGQJ,EAAWI,GAHnB,gDAKQC,QAAQC,IAAR,MALR,0DADY,uBAAC,SAAD,2BAUZC,CAAWX,EACd,GAAE,CAACA,KAGA,SAAC,IAAD,CAAKY,GAAG,MAAMC,EAAG,EAAjB,SACwB,IAAnBV,EAAQW,QACH,sEACA,wBACGX,EAAQY,KAAI,YAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACnB,OACI,2BACI,uBAAID,KACJ,uBAAIC,MAFCD,EAKhB,OAKpB,C,8LCrCDE,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,6GAEEF,EAAAA,EAAAA,IAAA,mCACSC,IAHX,cAEfE,EAFe,yBAIdA,EAASC,KAAKC,SAJA,gCAMrBd,QAAQC,IAAR,MANqB,yDAAH,qDAUbc,EAAU,mCAAG,WAAOlB,GAAP,gGAEKY,EAAAA,EAAAA,IAAA,gBACVZ,EADU,oBACIa,EADJ,oBAFL,cAEZE,EAFY,yBAIXA,EAASC,MAJE,gCAMlBb,QAAQC,IAAR,MANkB,yDAAH,sDAUVe,EAAS,mCAAG,WAAOnB,GAAP,gGAEMY,EAAAA,EAAAA,IAAA,gBACVZ,EADU,4BACYa,EADZ,oBAFN,cAEXE,EAFW,yBAIVA,EAASC,KAAKI,MAJJ,gCAMjBjB,QAAQC,IAAR,MANiB,yDAAH,sDAUTH,EAAY,mCAAG,WAAOD,GAAP,gGAEGY,EAAAA,EAAAA,IAAA,gBACVZ,EADU,4BACYa,EADZ,oBAFH,cAEdE,EAFc,yBAIbA,EAASC,KAAKC,SAJD,gCAMpBd,QAAQC,IAAR,MANoB,yDAAH,sDAUZiB,EAAgB,mCAAG,WAAOC,GAAP,gGAEDV,EAAAA,EAAAA,IAAA,+BACKC,EADL,kBACsBS,IAHrB,cAElBP,EAFkB,yBAIjBA,EAASC,KAAKC,SAJG,gCAMxBd,QAAQC,IAAR,MANwB,yDAAH,qD","sources":["components/Box.jsx","components/Reviews/Reviews.jsx","services/Movie-Database-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchReviews } from \"services/Movie-Database-api\";\nimport { Box } from \"components/Box\";\n\nexport default function Reviews() {\n    const {movieId} = useParams();\n    const [reviews, setReviews] = useState([]);\n    \n    useEffect(() => {\n        async function getReviews(id) {\n            try {\n                const resultingData = await fetchReviews(id);\n                setReviews(resultingData);\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        getReviews(movieId);\n    }, [movieId])\n\n    return(\n        <Box as=\"div\" p={3}>\n            {reviews.length === 0 \n                ? <p>We don't have any reviews for this movie.</p>\n                : <ul> \n                    {reviews.map(({author, content}) => {\n                        return(\n                            <li key={author}>\n                                <p>{author}</p>\n                                <p>{content}</p>\n                            </li>\n                        )\n                    })}\n                </ul>\n            }\n        </Box>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c0f869c87d748d5d35a5a4a4dbb44054';\n\nexport const fetchTrending = async () => {\n    try {\n        const response = await axios.get(\n            `trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchMovie = async (id) => {\n    try {\n        const response = await axios.get(\n            `movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCast = async (id) => {\n    try {\n        const response = await axios.get(\n            `movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchReviews = async (id) => {\n    try {\n        const response = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n        return response.data.results\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchMovieByName = async (name) => {\n    try {\n        const response = await axios.get(\n            `search/movie?api_key=${API_KEY}&query=${name}`);\n        return response.data.results\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","id","fetchReviews","resultingData","console","log","getReviews","as","p","length","map","author","content","axios","API_KEY","fetchTrending","response","data","results","fetchMovie","fetchCast","cast","fetchMovieByName","name"],"sourceRoot":""}