{"version":3,"file":"static/js/329.1dc01739.chunk.js","mappings":"2LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,6KCjBWC,EAAOT,EAAAA,GAAAA,GAAH,2HACF,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAA0B,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGlB,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAKbU,GAAWZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,iDACN,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,I,SCPD,SAASY,IACpB,OAAoDC,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,kHAEsCC,EAAAA,EAAAA,MAFtC,OAEcC,EAFd,OAGcC,EAAgBD,EAAgBE,KAAI,kBAAkB,CAACC,GAAnB,EAAEA,GAAqBC,MAAvB,EAAMA,MAAN,IACpCC,EAAsBJ,EAAcK,QAAO,SAAAC,GAAI,YAAmBC,IAAfD,EAAKH,KAAT,IACrDP,GAAsB,SAAAY,GAAS,wBAAQA,IAAR,OAAsBJ,GAAtB,IALvC,gDAOQK,QAAQC,IAAR,MAPR,0DADY,uBAAC,WAAD,wBAYZC,EACH,GAAC,KAGE,SAACjC,EAAA,EAAD,CAAKkC,GAAG,MAAMvB,EAAG,EAAjB,SACKM,IACG,wBACCA,EAAmBM,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MAC1B,OAAO,SAACf,EAAD,WAAgB,SAACG,EAAD,CAAUsB,GAAE,iBAAYX,GAAxB,SAA+BC,KAApCD,EACrB,OAKhB,CCjCc,SAASY,IACpB,OACI,+BACI,SAACrB,EAAD,KAGX,C,8LCNDsB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHlB,EAAa,mCAAG,6GAEEiB,EAAAA,EAAAA,IAAA,mCACSC,IAHX,cAEfC,EAFe,yBAIdA,EAASX,KAAKY,SAJA,gCAMrBT,QAAQC,IAAR,MANqB,yDAAH,qDAUbS,EAAU,mCAAG,WAAOjB,GAAP,gGAEKa,EAAAA,EAAAA,IAAA,gBACVb,EADU,oBACIc,EADJ,oBAFL,cAEZC,EAFY,yBAIXA,EAASX,MAJE,gCAMlBG,QAAQC,IAAR,MANkB,yDAAH,sDAUVU,EAAS,mCAAG,WAAOlB,GAAP,gGAEMa,EAAAA,EAAAA,IAAA,gBACVb,EADU,4BACYc,EADZ,oBAFN,cAEXC,EAFW,yBAIVA,EAASX,KAAKe,MAJJ,gCAMjBZ,QAAQC,IAAR,MANiB,yDAAH,sDAUTY,EAAY,mCAAG,WAAOpB,GAAP,gGAEGa,EAAAA,EAAAA,IAAA,gBACVb,EADU,4BACYc,EADZ,oBAFH,cAEdC,EAFc,yBAIbA,EAASX,KAAKY,SAJD,gCAMpBT,QAAQC,IAAR,MANoB,yDAAH,sDAUZa,EAAgB,mCAAG,WAAOC,GAAP,gGAEDT,EAAAA,EAAAA,IAAA,+BACKC,EADL,kBACsBQ,IAHrB,cAElBP,EAFkB,yBAIjBA,EAASX,KAAKY,SAJG,gCAMxBT,QAAQC,IAAR,MANwB,yDAAH,qD","sources":["components/Box.jsx","components/Trending/Trending.styled.jsx","components/Trending/Trending.jsx","pages/Home/Home.jsx","services/Movie-Database-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);","import { NavLink } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nexport const Item = styled.li`\n    padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n\n    &:not(:last-child)Â {\n        margin-bottom: ${p => p.theme.space[3]}px;\n;\n    }\n`\n\nexport const ItemLink = styled(NavLink)`\n    padding: ${p => p.theme.space[3]}px;\n ;\n`","import { Box } from \"components/Box\";\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport { fetchTrending } from \"services/Movie-Database-api\"\nimport { Item, ItemLink } from \"./Trending.styled\";\n\nexport default function Trending () {\n    const [listTrendingMovies, setListTrendingMovies] = useState([]);\n\n    useEffect(() => {\n        async function getTrending() {\n            try{\n                const resultingMovies = await fetchTrending();\n                const necessaryData = resultingMovies.map(({id, title}) => ({id, title}));\n                const filterNecessaryData = necessaryData.filter(data => data.title !== undefined);\n                setListTrendingMovies(prevState => [...prevState, ...filterNecessaryData]);\n            } catch (error){\n                console.log(error)\n            }\n        }\n\n        getTrending();\n    },[])\n\n    return(\n        <Box as=\"div\" p={3}>\n            {listTrendingMovies && (\n                <ul>\n                {listTrendingMovies.map(({id, title}) => {\n                    return <Item key={id} ><ItemLink to={`movies/${id}`}>{title}</ItemLink></Item>\n                })}\n                </ul>\n            )}\n        </Box>\n    )\n}","import Trending from \"components/Trending/Trending\";\n\nexport default function Home() {\n    return(\n        <>\n            <Trending />\n        </>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c0f869c87d748d5d35a5a4a4dbb44054';\n\nexport const fetchTrending = async () => {\n    try {\n        const response = await axios.get(\n            `trending/all/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchMovie = async (id) => {\n    try {\n        const response = await axios.get(\n            `movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCast = async (id) => {\n    try {\n        const response = await axios.get(\n            `movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchReviews = async (id) => {\n    try {\n        const response = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n        return response.data.results\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchMovieByName = async (name) => {\n    try {\n        const response = await axios.get(\n            `search/movie?api_key=${API_KEY}&query=${name}`);\n        return response.data.results\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Item","p","theme","ItemLink","NavLink","Trending","useState","listTrendingMovies","setListTrendingMovies","useEffect","fetchTrending","resultingMovies","necessaryData","map","id","title","filterNecessaryData","filter","data","undefined","prevState","console","log","getTrending","as","to","Home","axios","API_KEY","response","results","fetchMovie","fetchCast","cast","fetchReviews","fetchMovieByName","name"],"sourceRoot":""}